use 5.008001;
use ExtUtils::MakeMaker;
# See lib/ExtUtils/MakeMaker.pm for details of how to influence
# the contents of the Makefile that is written.
WriteMakefile
    (NAME		=> 'Garmin::FIT::Streamer',
     VERSION_FROM	=> 'lib/Garmin/FIT/Streamer/Package.pm',
     PREREQ_PM		=> {
         # Only for the tests
	 "Test::More"	=> "0.01",
         # Want the version compatible with other Digest modules
         "Digest::CRC"	=> "0.10",
     },
     ABSTRACT_FROM	=> 'lib/Garmin/FIT/Streamer.pm',
     AUTHOR		=> 'Ton Hospel <Ton Hospel <Garmin-FIT-Streamer@ton.iguana.be>',
     PL_FILES		=> {},
     $^O eq "MSWin32" ? (
         PM_FILTER	=> '$(PERL) -p -e1',
     ) : (),
     clean		=> {
         FILES => '$(DISTNAME).ppd ppm cover_db Profile.dump',
     },
);

# START MY
# autogenerated by release_pm
BEGIN {
    package MY;

    use vars qw(%postamble);

    $postamble{ppm} = <<'EOT';
ppm: $(DISTNAME).ppd
	makeppd.pl "--perl=$(PERLRUN)" --min_version=1.016 "--zip=$(ZIP)" "--tar=$(TAR)" "--compress=$(COMPRESS)" --leave=ppm "--objects=$(OBJECT)" $(DISTNAME).ppd $(VERSION)
EOT

    $postamble{ppm3} = <<'EOT';
ppm3: $(DISTNAME).ppd
	makeppd.pl "--perl=$(PERLRUN)" --min_version=1.016 "--zip=$(ZIP)" "--tar=$(TAR)" "--compress=$(COMPRESS)" --ppm_version=3 --leave=ppm3 "--objects=$(OBJECT)" $(DISTNAME).ppd $(VERSION)
EOT

    $postamble{ppm4} = <<'EOT';
ppm4: $(DISTNAME).ppd
	makeppd.pl "--perl=$(PERLRUN)" --min_version=1.016 "--zip=$(ZIP)" "--tar=$(TAR)" "--compress=$(COMPRESS)" --ppm_version=4 --leave=ppm4 "--objects=$(OBJECT)" $(DISTNAME).ppd $(VERSION)
EOT

    $postamble{ppd} = <<'EOT';
$(DISTNAME).ppd: all ppd
EOT

    $postamble{cover} = <<'EOT';
cover:
	cover -delete
	mkdir cover_db
	-HARNESS_PERL_SWITCHES=-MDevel::Cover make test
	cover
EOT

    $postamble{critic} = <<'EOT';
critic:
	perlcritic .
EOT

    $postamble{ppm_install} = <<'EOT';
ppm_install: ppm
	ppm install ppm/$(DISTNAME).ppd
EOT

    $postamble{ppm_uninstall} = <<'EOT';
ppm_uninstall:
	ppm uninstall $(DISTNAME)
EOT

undef &postamble;	## no critic (ProhibitUselessNoCritic ProhibitAmpersandSigils)
}
{
    package MY;
    sub postamble {
	return shift->SUPER::postamble() . join("\n", @postamble{sort {uc $a cmp uc $b || $a cmp $b } keys %postamble});
    }
}
# END MY

BEGIN {
    package MY;

    use vars qw(%postamble);

    $postamble{profile} = <<'EOT';
lib/Garmin/FIT/Streamer/Profile.pm Profile.dump: profile_from_html Profile.html lib/Garmin/FIT/Streamer/BaseType.pm lib/Garmin/FIT/Streamer/Type.pm lib/Garmin/FIT/Streamer/Field.pm lib/Garmin/FIT/Streamer/Message.pm
	"$(PERLRUN)" profile_from_html lib/Garmin/FIT/Streamer/Profile.pm Profile.dump Profile.html
EOT
}
